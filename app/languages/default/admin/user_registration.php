<?php return array(
	'admin.user_registration.active_directory'                      => 'Active Directory',
	'admin.user_registration.add_user_source'                       => 'Add User Source',
	'admin.user_registration.application_key'                       => 'Application Key',
	'admin.user_registration.application_secret'                    => 'Application Secret',
	'admin.user_registration.base_dn'                               => 'Base DN',
	'admin.user_registration.click_here_to_sign_up'                 => 'Click here to sign up now',
	'admin.user_registration.confirm_delete_user_source'            => 'Are you sure you want to delete this usersource? Users will not be able to log in with these credentials anymore.',
	'admin.user_registration.consumer_key'                          => 'Consumer Key',
	'admin.user_registration.consumer_secret'                       => 'Consumer Secret',
	'admin.user_registration.custom_database'                       => 'Custom Database',
	'admin.user_registration.custom_filter'                         => 'Custom Filter',
	'admin.user_registration.database_dsn'                          => 'Database DSN',
	'admin.user_registration.database_password'                     => 'Database Password',
	'admin.user_registration.database_user'                         => 'Database User',
	'admin.user_registration.domain_name'                           => 'Domain Name',
	'admin.user_registration.email_field'                           => '"Email" field',
	'admin.user_registration.enable_validation_email_tickets'       => 'Enable validation for email submitted tickets',
	'admin.user_registration.enable_validation_web_tickets'         => 'Enable validation for web submitted tickets',
	'admin.user_registration.enable_validation_widget_tickets'      => 'Enable validation for widget submitted tickets',
	'admin.user_registration.enter_dsn_mysql'                       => 'Enter the DSN connection string for the database. Refer to the manual for the string format (<a href="http://www.php.net/manual/en/ref.pdo-mysql.connection.php">MySQL</a>). For example: <var>mysql:host=localhost;dbname=mydb</var>',
	'admin.user_registration.enter_email_field_here'                => 'If your schema has a unique "email" field users can use to log in, enter it here. Note that you must specify the username or email fields, or both.',
	'admin.user_registration.enter_facebook_api_key'                => 'Enter your Facebook API application key',
	'admin.user_registration.enter_facebook_api_secret'             => 'Enter your Facebook API application secret',
	'admin.user_registration.enter_name_field_here'                 => 'If your schema has a field that stores the users full name, enter it here.',
	'admin.user_registration.enter_port_here'                       => 'If you are using a non-standard port (389, or 636 for secure connections), enter it here',
	'admin.user_registration.enter_raw_php_code'                    => 'Enter the raw PHP code to use when checking the validity of an inputted password against 				a found user record. The following variables are available for use: 				<ul> 					<li>&middot; $userinfo is the full row from your table</li> 					<li>&middot; $userinfo_password is the password field from the row. This is the same as $userinfo[\'yourpasswordfield\']</li> 					<li>&middot; $password_input is the password inputted by the user. This is what you need to check against $userinfo_password.</li> 					<li>&middot; $pass is a boolean value. If the password is correct, set this variable to true. If it is invalid, set it to false.</li> 				</ul>                 Here is some example code to check a salted password:<br /> 				<code>$pass = (md5($password_input . $userinfo[\'salt\']) == $userinfo_password);</code>',
	'admin.user_registration.enter_table_prefix_here'               => 'If your installation is using a table prefix, enter it here.',
	'admin.user_registration.enter_the_dsn'                         => 'Enter the DSN connection string for the database. Refer to the manual for the string format ({{links}}). For example, for a MySQL database: <var>mysql:host=localhost;dbname=mydb</var>',
	'admin.user_registration.enter_twitter_key'                     => 'Enter your Twitter consumer key',
	'admin.user_registration.enter_twitter_secret'                  => 'Enter your Twitter consumer secret',
	'admin.user_registration.enter_username_field_here'             => 'If your schema has a unique "username" field users can use to log in, enter it here. This field is optional and allows users to enter usernames into the login form instead of email addresses.',
	'admin.user_registration.explain_default_filter'                => 'By default, the filter performed when looking up users is <var>(&(objectClass=user)(sAMAccountName=%s))</var>. Use <var>%s</var> as the input placeholder.',
	'admin.user_registration.explain_lost_password'                 => 'When a user has logged-in using this usersource and later clicks the "Forgot Password" link, this is the URL they will be given to reset their password.',
	'admin.user_registration.explain_must_login_mode'               => 'With this mode, the helpdesk is readable by everyone but users must register or log in to submit content such as new tickets, new feedback, or new comments.',
	'admin.user_registration.explain_open_helpdesk'                 => 'With an open helpdesk, anyone can use the helpdesk. New profiles are created for users automatically when they submit new content.',
	'admin.user_registration.explain_user_source'                   => 'A user source is any database that DeskPRO will use to authenticate users when they want to log in.',
	'admin.user_registration.ez_publish'                            => 'eZ Publish',
	'admin.user_registration.facebook_setup'                        => 'Facebook Setup',
	'admin.user_registration.first_name_field'                      => '"First Name" field',
	'admin.user_registration.for_example'                           => 'For example',
	'admin.user_registration.force_registered_login'                => 'Force existing users to log in',
	'admin.user_registration.full_name_field'                       => '"Full Name" field',
	'admin.user_registration.google'                                => 'Google',
	'admin.user_registration.id_field'                              => '"ID" field',
	'admin.user_registration.last_name_field'                       => '"Last Name" field',
	'admin.user_registration.lbl_fqdn'                              => 'The FQDN name for users in this directory. For example, a user alice@acme.com would have a domain of acme.com. This option is not required, but if it is not supplied, usernames in principal name form (e.g., alice@acme.com) are not supported.',
	'admin.user_registration.lbl_password_field'                    => 'The field in the table that contains the users password.',
	'admin.user_registration.lbl_password_key'                      => 'The secret key inside the password check service file you uploaded',
	'admin.user_registration.lbl_short_user_domain'                 => 'The "short" domain name for users in this directory, "ACME". Note that there is a 1:1 mapping between this short name and the domain name above. This option should be used to specify the NetBIOS domain name for Windows networks. This option is not required but if it is not supplied, usernames in backslash form (e.g., ACME\\alice) are not supported.',
	'admin.user_registration.lbl_url_password_check'                => 'The URL to the password check service you uploaded.',
	'admin.user_registration.lbl_user_id_field'                     => 'The field that contains a users unique ID.',
	'admin.user_registration.lost_password_url'                     => 'Lost Password URL',
	'admin.user_registration.magento'                               => 'Magento',
	'admin.user_registration.ms_sql'                                => 'MS SQL',
	'admin.user_registration.mysql'                                 => 'MySQL',
	'admin.user_registration.new_usersource'                        => 'New Usersource',
	'admin.user_registration.notice_closed_helpdesk'                => 'With a closed helpdesk, registration is closed so users must already exist in an external user-source or their accounts must be created manually by an agent.',
	'admin.user_registration.notice_enable_twitter'                 => 'To enable Twitter integration, you must register with Twitter to get your own key and secret.',
	'admin.user_registration.notice_enabled_facebook'               => 'To enable Facebook integration, you must register with Facebook to get your own application key and application secret.',
	'admin.user_registration.notice_force_validate_email'           => 'Force users to validate their email address when they first register.  This applies to everything except new tickets. You can enable email validation on tickets via <a href="{{path}}">ticket triggers</a> or by enabling these built-in triggers:',
	'admin.user_registration.notice_like_request_registration'      => 'This is the same as "Request Registration" except that users must be manually validated by agents before they are able interact with the helpdesk.',
	'admin.user_registration.notice_when_email_exists'              => 'If a user tries to submit new content with an email address that is already in the system, they will be prompted to log in before their form is accepted.',
	'admin.user_registration.open_helpdesk'                         => 'Open Helpdesk',
	'admin.user_registration.password_check_service_key'            => 'Password check service key',
	'admin.user_registration.password_field'                        => '"Password" field',
	'admin.user_registration.php_password_code'                     => 'PHP code to verify inputted password',
	'admin.user_registration.phpbb2'                                => 'phpBB2',
	'admin.user_registration.phpbb3'                                => 'phpBB3',
	'admin.user_registration.registration_mode'                     => 'Registration Mode',
	'admin.user_registration.registration_options'                  => 'Registration Options',
	'admin.user_registration.registration_settings'                 => 'Registration Settings',
	'admin.user_registration.require_registration'                  => 'Require Registration',
	'admin.user_registration.require_registration_agent_validation' => 'Require Registration with Agent Validation',
	'admin.user_registration.save_registration_settings'            => 'Save Registration Settings',
	'admin.user_registration.service_account'                       => 'Service Account',
	'admin.user_registration.short_domain_name'                     => 'Short Domain Name (Slash)',
	'admin.user_registration.sqlite'                                => 'SQLite',
	'admin.user_registration.table'                                 => 'Table',
	'admin.user_registration.table_containing_user_info'            => 'Person Details',
	'admin.user_registration.table_prefix'                          => 'Table Prefix',
	'admin.user_registration.twitter_setup'                         => 'Twitter Setup',
	'admin.user_registration.url_password_check'                    => 'URL to password check service',
	'admin.user_registration.use_secure_connection'                 => 'Use Secure Connection',
	'admin.user_registration.user_sources'                          => 'User Sources',
	'admin.user_registration.username_field'                        => '"Username" field',
	'admin.user_registration.vbulletin_versions'                    => 'vBulletin v3.x or v4.x',
);